/*%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
This file is part of Morgana.
Author: Andrea Villa, andrea.villa81@fastwebnet.it

Morgana is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or (at your option) any later version.

Morgana is distributed in the hope that it will be useful,but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with Morgana. If not, see <http://www.gnu.org/licenses/>.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%*/

#include <cmath>
#include <iostream>

#include "pMap.hpp"
#include "pMapManip.hpp"


/*! Run with one processor */
int main(int argc, char *argv[])
{
  typedef pMap<pMapItem> OBJ;
  
  pMapItem  item;
  RCP<OBJ>  sMap(new OBJ), rMap(new OBJ);
  sVect<OBJ> segmented;
  
  item.setLid(1); item.setGid(2);
  sMap->push_back(item);
  
  item.setLid(2); item.setGid(4);
  sMap->push_back(item);
  
  item.setLid(3); item.setGid(6);
  sMap->push_back(item);
  
  item.setLid(4); item.setGid(8);
  sMap->push_back(item);
  
  item.setLid(5); item.setGid(10);
  sMap->push_back(item);
  
  item.setLid(6); item.setGid(12);
  sMap->push_back(item);
  
  cout << *sMap << endl;
  
  //Map manipulator
  pMapManip<pMapItem> sManip(sMap), rManip(rMap);
  
  sManip.segmentationSimple(segmented,3);
  rManip.mergeSimple(segmented);
  
  cout << "numSegment: " << segmented.size() << endl;
  cout << *rMap << endl;
}

/*
pid: 0 lid: 1 gid: 2
pid: 0 lid: 2 gid: 4
pid: 0 lid: 3 gid: 6
pid: 0 lid: 4 gid: 8
pid: 0 lid: 5 gid: 10
pid: 0 lid: 6 gid: 12

numSegment: 2
pid: 0 lid: 1 gid: 2
pid: 0 lid: 2 gid: 4
pid: 0 lid: 3 gid: 6
pid: 0 lid: 4 gid: 8
pid: 0 lid: 5 gid: 10
pid: 0 lid: 6 gid: 12
*/
